# The first map file maps the host header into the hostname for the lookup
#
# The following map files are all generated from the maps/src area using the script x.
# This enables us to support virtual hosts in the future without having to tweak the 
# actual input map files.  It also allows sanity checking of map entries in the future.
#
# The vanity redirect map to an absolute path.  This does not include the rest of the command-line
# This makes it useful for 
#
map $key $redirect_url {
  include /etc/nginx/maps/redirects.map ;
}
map $redirect_url $redirect_url_noslash {
  ~^(.*)/$ $1 ;
  default $redirect_url ;
}

map $host $hostkey {
  hostnames;
  include /etc/nginx/maps/host2key.map;
  default $host ;
}

# ####
# The next three files determine which backend but based on different keys - they all use the 
# same files but have different lookup values:
# 
# 1) hostkey - whole sites
# 
map $hostkey $host_backend {
  include /etc/nginx/maps/sites.map;
  include /etc/nginx/maps/vhosts.map;
  default wordpress ;
}

# 2) hostkey/first - 
# 
map $hostkey/$toplevel $top_backend {
  include /etc/nginx/maps/sites.map;
  include /etc/nginx/maps/vhosts.map;
}

# 3) hostkey/first/second)
# 
map $hostkey/$microsite $micro_backend {
  include /etc/nginx/maps/sites.map;
  include /etc/nginx/maps/vhosts.map;
}

# ####
# This map determines the which hostname to use for each backend type.
#
map $backend $backend_hostname {
  include /etc/nginx/hosts.map ;
}

# ####
# This map determines whether we need to add the Host header when proxying to 
# a backend.  If the value is none then we do not override the Host header - 
# this is necessary for S3 buckets.
#
map $backend $backend_hostheader {
  include /etc/nginx/maps/backend_hostheader.map ;
  default $host ;
}

# ####
# This map determines what scheme to use for the upstream request.  Most
# backends support both http and https but some backends (for example S3 buckets)
# only support http.  The default is $scheme and the external file backend_scheme.map
# allows the forcing of the backend.
#
map $backend $backend_scheme {
  include /etc/nginx/maps/backend_scheme.map ;
  default $scheme ;
}

# ####
# This map determines whether we need to add the cache-control header to all output 
# from a particular backend.  
#
map $backend $backend_cachecontrol {
  include /etc/nginx/maps/cachecontrol.map ;
}

# ####
# This map determines the appropriate X-SSL value by scheme.  It is done this way because all the 
# proxy_set_headers need to be done once the backend type has been determined.
#
map $scheme $backend_xssl {
  https on ;
  default '' ;
}

